// ==========================================================================
// BUTTONS
// ==========================================================================

@mixin btn-size($font-size, $line-height, $padding) {
	@if mixin-exists(override-mixin-btn-size) {
		@include override-mixin-btn-size($font-size, $line-height, $padding);
	} @else {
		font-size: $font-size;
		padding: $padding;
		line-height: $line-height;
	}
	@if mixin-exists(extend-mixin-btn-size) { @include extend-mixin-btn-size($font-size, $line-height, $padding); }
}

/// @name btn-variation
/// Returns a themed button variation
/// @param {list} $default 	- The default theme
/// @param {list} $hover 	- The hover theme
/// @param {list} $active 	- The default theme
/// @example
///     @include btn-variation(
///         ($btn-primary-color, $btn-primary-background),					// Default
///         ($btn-primary-hover-color, $btn-primary-hover-background),		// Hover/Focus
///         ($btn-primary-active-color, $btn-primary-active-background)		// Activeactive
///     );
@mixin btn-variation($default, $hover, $active) {
	@if mixin-exists(override-mixin-btn-variation) {
		@include override-mixin-btn-variation($default, $hover, $active);
	} @else {
		$COLOR: 1;
		$BACKGROUND: 2;

		color: nth($default, $COLOR);
		background: nth($default, $BACKGROUND);

		&:hover,
		&:focus {
			@if nth($hover, $COLOR) != null {
				color: nth($hover, $COLOR);
			}

			@if nth($hover, $BACKGROUND) != null {
				background: nth($hover, $BACKGROUND);
			}
		}

		&:active {
			@if nth($active, $COLOR) != null {
				color: nth($active, $COLOR);
			}

			@if nth($active, $BACKGROUND) != null {
				background: nth($active, $BACKGROUND);
			}
		}
	}
	@if mixin-exists(extend-mixin-btn-variation) { @include extend-mixin-btn-variation($default, $hover, $active); }
}
//
//@mixin button($default, $hover, $active) {
//	font-size: 16px;
//	line-height: 1.5;
//	transition-duration: $site-base-transition;
//	transition-property: color, background-color, border-color;
//	display: inline-block;
//	outline: none; // This is OK because we have a focus state
//	color: nth($default, 1);
//	background-color: nth($default, 2);
//	border: 1px solid nth($default, 3);
//	font-weight: 500;
//	text-decoration: none;
//	padding: 12px 40px;
//	text-align: center;
//	width: 100%;
//
//	&:hover,
//	&:focus {
//		color: nth($hover, 1);
//		background-color: nth($hover, 2);
//		border-color: nth($hover, 3);
//	}
//
//	&:active {
//		color: nth($active, 1);
//		background-color: nth($active, 2);
//		border-color: nth($active, 3);
//	}
//
//	&[disabled] {
//		cursor: default;
//		color: $grey-dark;
//		background-color: $grey-light;
//		border-color: $grey-light;
//	}
//
//	@include bp(xxs) {
//		width: auto;
//	}
//}

