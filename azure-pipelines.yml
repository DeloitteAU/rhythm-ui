trigger:
  branches:
    include:
    - '*'
    exclude:
    - dependabot/*

resources:
- repo: self

variables:
  tag: '$(Build.BuildNumber)'
  npmrcPath: '$(Build.Repository.LocalPath)/.npmrc'
  azureSubscription: 'Managed Services Central Billing'
  azureAccountName: 'rhythmuidocs'
  canaryFeed: https://pkgs.dev.azure.com/dd-managed-services/_packaging/rhythm-ui/npm/registry/

stages:

- stage: build
  displayName: "Build"
  jobs:
  - job: buildPrimeCache
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - task: DeleteFiles@1
      inputs:
        sourceFolder: .ruidocs
        contents: '*'

    #Fix concurrent issue with multiple threads trying to create this folder
    - script: |
        mkdir -p .ruidocs 
      displayName: 'Prime Cache' 

    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node'

    - script: |
        yarn install
        yarn bootstrap
      displayName: 'Install Dependencies'

    # - script: |
    #     yarn lint
    #     yarn test
    #   displayName: 'Running tests'

    # If Release, Read app version from root package json
    - script: |
        if [[ "$(Build.SourceBranch)" == refs/heads/release/* ]]; then
          RUI_PACKAGE_VERSION=$(node -p -e "require('./package.json').version")
          RUI_SHORT_VERSION=v$(echo $RUI_PACKAGE_VERSION | sed "s/\(\.[0-9]*\)$//" | tr . -)
          echo "##vso[task.setvariable variable=RUI_PACKAGE_VERSION]$RUI_PACKAGE_VERSION"
          echo "##vso[task.setvariable variable=RUI_SHORT_VERSION]v$RUI_SHORT_VERSION"
        elif [ "$(Build.SourceBranch)" == "refs/heads/master" ]; then
          echo "##vso[task.setvariable variable=RUI_PACKAGE_VERSION]0.0.0-canary-$(tag)"
          echo "##vso[task.setvariable variable=RUI_SHORT_VERSION]canary"
        fi
      displayName: 'Set Version'

    - script: |
        yarn build:components
      displayName: 'Build Components'

    - script: |
        if [[ "$(Build.SourceBranch)" == refs/heads/release/* ]]; then
          WWW_PATH_PREFIX=production/$(RUI_SHORT_VERSION) yarn build:site
        else
          WWW_PATH_PREFIX=staging/$(RUI_SHORT_VERSION) yarn build:site
        fi
      displayName: 'Build Docs'

    - script: |
        if [[ "$(Build.SourceBranch)" == refs/heads/release/* ]]; then
          STORYBOOK_PATH_PREFIX=staging/canary/react yarn build:storybook:react
        else
          STORYBOOK_PATH_PREFIX=staging/$(RUI_SHORT_VERSION)/react yarn build:storybook:react
        fi
      displayName: 'Build React Docs'

    # Disabled for now until we pick up vue again
    # - script: |
    #     yarn build:storybook:vue
    #   displayName: 'Build react docs'


    # If Master, pack canary
    - script: |
        if [[ "$(Build.SourceBranch)" == refs/heads/release/* ]]; then
          node_modules/.bin/lerna exec --scope @rhythm-ui/* --stream --no-private -- "npm pack"
          yarn lerna version $(RUI_PACKAGE_VERSION)-beta.$(tag) --no-git-tag-version --no-push --yes
          node_modules/.bin/lerna exec --scope @rhythm-ui/* --stream --no-private -- "npm pack"
        elif [ "$(Build.SourceBranch)" == "refs/heads/master" ]; then
          yarn lerna version 0.0.0-canary.$(tag) --no-git-tag-version --no-push --yes
          node_modules/.bin/lerna exec --scope @rhythm-ui/* --stream --no-private -- "npm pack"
        fi
      displayName: 'Pack Components'

    - task: CopyFiles@2
      displayName: 'Stage all NPM Packages'
      inputs:
        contents: |
          components/*/*.tgz
          adapters/react/*/*.tgz
          adapters/vue/*/*.tgz
        targetFolder: $(Build.ArtifactStagingDirectory)/npm
        flattenFolders: true

    - task: ArchiveFiles@2
      displayName: 'Stage Docs'
      inputs:
        rootFolderOrFile: './www/public' 
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/docs/site.zip'
        replaceExistingArchive: true

    - task: ArchiveFiles@2
      displayName: 'Stage React Docs'
      inputs:
        rootFolderOrFile: './.out-react' 
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/docs/react.zip'
        replaceExistingArchive: true

    # - task: ArchiveFiles@2
    #   inputs:
    #     rootFolderOrFile: './.out-vue' 
    #     archiveType: 'zip'
    #     archiveFile: '$(Build.ArtifactStagingDirectory)/docs/vue.zip'
    #     replaceExistingArchive: true
    #   displayName: Stage Vue Docs

    # Save reference to build variables
    # (This is a backwards way because azure doesn't allow release variables to be shared between stages)
    - script: |
        echo -e "RUI_PACKAGE_VERSION=$(RUI_PACKAGE_VERSION)\nRUI_SHORT_VERSION=$(RUI_SHORT_VERSION)" > $(Build.ArtifactStagingDirectory)/variables.txt
        chmod +x $(Build.ArtifactStagingDirectory)/variables.txt
      displayName: 'Stage Build Out Variables'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: drop
      displayName: 'Publish Build Artifacts'


- stage: publishCanary
  displayName: "Publish Canaray"
  dependsOn: build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
  - job: publishCanaryNPMFeed
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node'

    - script: |
        printf "@rhythm-ui:registry=$(canaryFeed)\nalways-auth=true" > $(npmrcPath)
      displayName: 'Connect to local npm feed' 

    - task: npmAuthenticate@0
      inputs:
        workingFile: $(npmrcPath)

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'
        artifactName: drop

    - script: |
        source $(System.ArtifactsDirectory)/drop/variables.txt
        echo "##vso[task.setvariable variable=RUI_PACKAGE_VERSION]$RUI_PACKAGE_VERSION"
        echo "##vso[task.setvariable variable=RUI_SHORT_VERSION]$RUI_SHORT_VERSION"
      displayName: Read build variables

    - script: |
        unzip $(System.ArtifactsDirectory)/drop/docs/site.zip -d $(Agent.TempDirectory)
        unzip $(System.ArtifactsDirectory)/drop/docs/react.zip -d $(Agent.TempDirectory)/public/react
      displayName: Extract Docs

    # Publish Canary Packages to feed
    - script: |
        find $(System.ArtifactsDirectory)/drop/npm -iname '*.tgz' -maxdepth 1 -type f -exec npm publish {} --loglevel=verbose --userconfig=$(npmrcPath) \;
      displayName: 'Publish @rhythm-ui Components'

    # TODO: Delete folder if exists... this fails if it dosnt
    #'az storage blob delete-batch --source staging/$(RUI_SHORT_VERSION) --account-name rhythmuidocs'

    - task: AzureCLI@1
      inputs:
        azureSubscription: $(azureSubscription)
        scriptLocation: 'inlineScript'
        inlineScript: 'az storage blob upload-batch --destination staging/$(RUI_SHORT_VERSION) --account-name rhythmuidocs --source $(Agent.TempDirectory)/public'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      displayName: Publish docs to Azure

