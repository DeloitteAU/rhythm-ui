trigger:
  branches:
    include:
    - '*'
    exclude:
    - dependabot/*

resources:
- repo: self

variables:
  tag: '$(Build.BuildNumber)'
  npmrcPath: '$(Build.Repository.LocalPath)/.npmrc'
  azureSubscription: 'Managed Services Central Billing'
  azureAccountName: 'rhythmuidocs'

stages:

- stage: build
  displayName: "Build"
  jobs:
  - job: buildPrimeCache
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - task: DeleteFiles@1
      inputs:
        sourceFolder: .ruidocs
        contents: '*'

    #Fix concurrent issue with multiple threads trying to create this folder
    - script: |
        mkdir -p .ruidocs 
      displayName: 'Prime Cache' 

    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node'

    - script: |
        yarn install
        yarn bootstrap
      displayName: 'Install Dependencies'

    - script: |
        yarn build:components
      displayName: 'Build @rhythm-ui components'

    - script: |
        yarn build:site
      displayName: 'Build Docs'

    - script: |
        yarn build:storybook:react
      displayName: 'Build React Docs'

    # Disabled for now until we pick up vue again
    # - script: |
    #     yarn build:storybook:vue
    #   displayName: 'Build react docs'

    - script: |
        node_modules/.bin/lerna exec --scope @rhythm-ui/* --stream --no-private -- "npm pack"
      displayName: 'Pack @rhythm-ui Components'

    - task: CopyFiles@2
      inputs:
        contents: '**/*.tgz'
        targetFolder: $(Build.ArtifactStagingDirectory)
      displayName: Stage NPM Packages

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: './www/public' 
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/docs-site.zip'
        replaceExistingArchive: true
      displayName: Archive Docs

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: './.out-react' 
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/docs-react-site.zip'
        replaceExistingArchive: true
      displayName: Archive React Docs

    # - task: ArchiveFiles@2
    #   inputs:
    #     rootFolderOrFile: './.out-vue' 
    #     archiveType: 'zip'
    #     archiveFile: '$(Build.ArtifactStagingDirectory)/docs-vue-site.zip'
    #     replaceExistingArchive: true
    #   displayName: Archive Vue Docs

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: drop
      displayName: 'Publish Build Artifacts'



- stage: publishCanary
  displayName: "Publish Canaray"
  dependsOn: build
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
  jobs:
  - job: publishCanaryNPMFeed
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node'

    - task: npmAuthenticate@0
      inputs:
        workingFile: $(npmrcPath)

        # PUBLISH TO NPM FEEDS (Modify .nvmrc file for feed location)
    # - script: |
    #     PACKAGE_VERSION=$(cat package.json \
    #     | grep version \
    #     | head -1 \
    #     | awk -F: '{ print $2 }' \
    #     | sed 's/[",]//g')
    #     yarn lerna version 0.0.0-canary.$(tag) --no-git-tag-version --no-push --yes
    #     node_modules/.bin/lerna exec --scope @rhythm-ui/* --stream --no-private -- "npm publish --loglevel=verbose --userconfig=$(npmrcPath)"
    #   displayName: 'Publish @rhythm-ui Components'

    # - task: AzureCLI@1
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     scriptLocation: 'inlineScript'
    #     inlineScript: 'az storage blob upload-batch --destination docs --account-name rhythmuidocs --source ./www/public'
    #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    #   displayName: Publish docs to Azure

    # - task: AzureCLI@1
    #   inputs:
    #     azureSubscription: $(azureSubscription)
    #     scriptLocation: 'inlineScript'
    #     inlineScript: 'az storage blob upload-batch --destination react-docs --account-name rhythmuidocs --source ./.out-react'
    #   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    #   displayName: Publish React docs to Azure
