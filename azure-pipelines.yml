trigger:
  branches:
    include:
    - '*'
    exclude:
    - dependabot/*

resources:
- repo: self

variables:
  tag: '$(Build.BuildNumber)'
  npmrcPath: '$(Build.Repository.LocalPath)/.npmrc'
  azureSubscription: 'Managed Services Central Billing'
  azureAccountName: 'rhythmuidocs'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: DeleteFiles@1
    inputs:
      sourceFolder: .ruidocs
      contents: '*'

  - script: |
      mkdir -p .ruidocs
    displayName: 'Prime Cache' #Fix concurrent issue with multiple threads trying to create this folder

  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node'

  - task: npmAuthenticate@0
    inputs:
      workingFile: $(npmrcPath)

  - script: |
      yarn install
      yarn bootstrap
    displayName: 'Install Dependencies'

  - script: |
      yarn build:components
    displayName: 'Build @rhythm-ui components'

  - script: |
      yarn build:site
    displayName: 'Build Docs'

  - script: |
      yarn build:storybook:react
    displayName: 'Build React Docs'

  # Disabled for now until we pick up vue again
  # - script: |
  #     yarn build:storybook:vue
  #   displayName: 'Build react docs'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: './www/public' 
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/docs-site.zip'
      replaceExistingArchive: true
    displayName: Archive Docs

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: './.out-react' 
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/docs-react-site.zip'
      replaceExistingArchive: true
    displayName: Archive React Docs

  # PUBLISH TO NPM FEEDS (Modify .nvmrc file for feed location)
  - script: |
      yarn lerna version 0.0.0-canary.$(tag) --no-git-tag-version --no-push --yes
      node_modules/.bin/lerna exec --scope @rhythm-ui/* --stream --no-private -- "npm publish --loglevel=verbose --userconfig=$(npmrcPath)"
    displayName: 'Publish @rhythm-ui Components'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)/docs-site.zip
      artifactName: docs
    displayName: 'Publish Docs Build Artifact'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)/docs-react-site.zip
      artifactName: docsReact
    displayName: 'Publish React Docs Build Artifact'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

  - task: AzureCLI@1
    inputs:
      azureSubscription: $(azureSubscription)
      scriptLocation: 'inlineScript'
      inlineScript: 'az storage blob upload-batch --destination docs --account-name rhythmuidocs --source ./www/public'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish docs to Azure

  - task: AzureCLI@1
    inputs:
      azureSubscription: $(azureSubscription)
      scriptLocation: 'inlineScript'
      inlineScript: 'az storage blob upload-batch --destination react-docs --account-name rhythmuidocs --source ./.out-react'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    displayName: Publish React docs to Azure
